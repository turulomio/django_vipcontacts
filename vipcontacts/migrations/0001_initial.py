# Generated by Django 3.1.7 on 2021-03-31 21:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('surname', models.CharField(blank=True, max_length=100)),
                ('surname2', models.CharField(blank=True, max_length=100)),
                ('birth', models.DateField(null=True)),
                ('death', models.DateField(null=True)),
                ('gender', models.IntegerField(choices=[(0, 'Man'), (1, 'Woman')])),
            ],
            options={
                'db_table': 'persons',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PersonRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt_update', models.DateTimeField()),
                ('dt_obsolete', models.DateTimeField(null=True)),
                ('type', models.IntegerField(choices=[(0, 'Wife'), (1, 'Husband'), (2, 'Son'), (3, 'Daughter')])),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='person', to='vipcontacts.person')),
                ('relationated', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='relationated', to='vipcontacts.person')),
            ],
            options={
                'db_table': 'personsrelations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt_update', models.DateTimeField()),
                ('model', models.CharField(max_length=30)),
                ('before', models.CharField(max_length=1000)),
                ('after', models.CharField(max_length=1000)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vipcontacts.person')),
            ],
            options={
                'db_table': 'logs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Alias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt_update', models.DateTimeField()),
                ('dt_obsolete', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=100)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alias', to='vipcontacts.person')),
            ],
            options={
                'db_table': 'alias',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt_update', models.DateTimeField()),
                ('dt_obsolete', models.DateTimeField(null=True)),
                ('type', models.IntegerField(choices=[(0, 'Home'), (1, 'Work'), (2, 'Vacances')])),
                ('address', models.CharField(max_length=300)),
                ('code', models.CharField(max_length=10, null=True)),
                ('city', models.CharField(max_length=100)),
                ('countrys', models.CharField(max_length=100)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address', to='vipcontacts.person')),
            ],
            options={
                'db_table': 'adresses',
                'managed': True,
            },
        ),
    ]
